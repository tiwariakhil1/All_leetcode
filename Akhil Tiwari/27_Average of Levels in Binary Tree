/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) 
    {
      vector<double>res;
      queue<TreeNode*>q;
        if(root==NULL)return res;
        q.push(root);
        while(!q.empty())
        {
            long long int sum=0;
            int size=q.size();
            int total=size;
            while(size>0)
            {
                TreeNode* f=q.front();
                q.pop();
                if(f->right)q.push(f->right);
                if(f->left)q.push(f->left);
                sum+=f->val;
                size--;
            }
            res.push_back(sum/(double)total);  
        }
        return res;
    }
};
